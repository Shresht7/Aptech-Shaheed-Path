---
export interface Props {
    type?: "button" | "reset" | "submit" | null;
    variant?: "primary" | "outline" | "link";
    bgColor?: string;
    color?: string;
    id?: string;
}

const {
    type,
    variant = "primary",
    color = "var(--color-bg)",
    bgColor = "var(--color-aptech-gold)",
    id,
} = Astro.props;
---

<button
    id={id}
    type={type}
    class:list={[variant]}
    style={`--color-button-text: ${color}; --color-button-background: ${bgColor};`}
>
    <slot />
</button>

<style>
    button {
        --color-button-outline: var(--color-aptech-gold);
        --color-button-background: var(--color-aptech-gold);
        --color-button-text: var(--color-bg);

        padding: 0.5rem 1.25rem;
        background-color: var(--color-button-background);
        color: var(--color-button-text);
        font-size: 0.8rem;
        border: 2px solid var(--color-button-background);
        border-radius: 0.25rem;
        outline: 2px solid var(--color-button-outline);
        transition: outline-offset var(--transition-duration) ease-in;
        cursor: pointer;
    }

    button.outline,
    button.link {
        background-color: transparent;
        color: inherit;
    }

    button.link {
        outline: none;
        border: none;
        transition: scale var(--transition-duration) ease-in;
    }

    button:hover {
        outline-offset: 2px;
    }

    button.outline:hover {
        outline-color: var(--color-button-background);
    }

    button.link:hover {
        color: var(--color-aptech-gold);
    }
</style>
